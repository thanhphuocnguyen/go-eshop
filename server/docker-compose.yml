name: eshop
services:
  redis:
    image: redis:latest
    container_name: eshop-redis
    ports:
      - "6380:6379"
    networks:
      - eshop-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
  postgres:
    image: postgres:16
    container_name: eshop-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: eshop
    ports:
      - "5433:5432"
    networks:
      - eshop-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d eshop -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  web:
    build: .
    container_name: eshop-web
    command: ["./web", "api"]
    ports:
      - "4000:4000"
    depends_on:
      postgres:
          condition: service_healthy
      redis:
          condition: service_healthy
    environment:
      REDIS_URL: redis:6379
      DB_URL: postgres://postgres:postgres@postgres:5432/eshop?sslmode=disable
    networks:
      - eshop-network
  worker:
    build: .
    container_name: eshop-worker
    command: ["./web", "worker"]
    depends_on:
      postgres:
          condition: service_healthy
      redis:
          condition: service_healthy
    environment:
      REDIS_URL: redis:6379
      DB_URL: postgres://postgres:postgres@postgres:5432/eshop?sslmode=disable
    networks:
      - eshop-network
  mailhog:
    build:
        context: .
        dockerfile: Dockerfile-mailhog
    container_name: eshop-mailhog
    volumes:
      - ./volumes/mailhog/volume:/maildir
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - eshop-network
networks:
  eshop-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local