{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server for a simple e-commerce API.",
        "title": "E-Commerce API",
        "contact": {}
    },
    "host": "localhost:4000",
    "basePath": "/api/v1",
    "paths": {
        "/address": {
            "get": {
                "description": "Get list of addresses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "address"
                ],
                "summary": "Get list of addresses",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-array_api_AddressResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "address"
                ],
                "summary": "Create a new address",
                "parameters": [
                    {
                        "description": "Create Address",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateAddressRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_AddressResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    }
                }
            }
        },
        "/address/{id}": {
            "put": {
                "description": "Update an address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "address"
                ],
                "summary": "Update an address",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Address ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Address",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateAddressRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_AddressResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove an address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "address"
                ],
                "summary": "Remove an address",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Address ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    }
                }
            }
        },
        "/address/{id}/default": {
            "put": {
                "description": "Set default address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "address"
                ],
                "summary": "Set default address",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Address ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    }
                }
            }
        },
        "/admin/brands/{id}": {
            "get": {
                "description": "Get a Brand by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get a Brand by ID",
                "operationId": "get-Brand-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Brand ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    }
                }
            }
        },
        "/admin/categories": {
            "post": {
                "description": "Create a new Category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new Category",
                "operationId": "create-Category",
                "parameters": [
                    {
                        "description": "Category request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/admin/categories/{id}": {
            "get": {
                "description": "Get a Category by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get a Category by ID",
                "operationId": "get-Category-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a Category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update a Category",
                "operationId": "update-Category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Category request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a Category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Delete a Category",
                "operationId": "delete-Category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/admin/collections": {
            "get": {
                "description": "Get a list of Collections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get a list of Collections",
                "operationId": "get-Collections",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new Collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Create a new Collection",
                "operationId": "create-Collection",
                "parameters": [
                    {
                        "description": "Collection info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/admin/collections/{id}": {
            "get": {
                "description": "Get a Collection by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get a Collection by ID",
                "operationId": "get-Collection-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Collection ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a Collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update a Collection",
                "operationId": "update-Collection",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Collection ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Collection info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a Collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Delete a Collection",
                "operationId": "delete-Collection",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Collection ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/admin/orders": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all orders with pagination and filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get all orders (Admin endpoint)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-array_api_OrderListResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-array_api_OrderListResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-array_api_OrderListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-array_api_OrderListResponse"
                        }
                    }
                }
            }
        },
        "/admin/orders/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed information about an order by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get order details by ID (Admin endpoint)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_OrderDetailResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_OrderDetailResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_OrderDetailResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_OrderDetailResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_OrderDetailResponse"
                        }
                    }
                }
            }
        },
        "/admin/ratings": {
            "get": {
                "description": "Get ratings for a specific product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ratings"
                ],
                "summary": "Get product ratings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Page size",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-array_api_ProductRatingModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    }
                }
            }
        },
        "/admin/ratings/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a product rating by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin",
                    "ratings"
                ],
                "summary": "Delete a rating",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Rating ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    }
                }
            }
        },
        "/admin/ratings/{id}/approve": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Approve a product rating by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin",
                    "ratings"
                ],
                "summary": "Approve a rating",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Rating ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    }
                }
            }
        },
        "/admin/ratings/{id}/ban": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Ban a user from rating by setting their rating to invisible",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin",
                    "ratings"
                ],
                "summary": "Ban a user from rating",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Rating ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    }
                }
            }
        },
        "/admin/users/{id}": {
            "get": {
                "description": "Get user info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get user info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_UserResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_UserResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_UserResponse"
                        }
                    }
                }
            }
        },
        "/attributes": {
            "get": {
                "description": "Get all attributes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attributes"
                ],
                "summary": "Get all attributes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-array_api_AttributeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-array_api_AttributeResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create an attribute",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attributes"
                ],
                "summary": "Create an attribute",
                "parameters": [
                    {
                        "description": "Attribute name",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateAttributeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_AttributeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_AttributeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_AttributeResponse"
                        }
                    }
                }
            }
        },
        "/attributes/{id}": {
            "get": {
                "description": "Get an attribute",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attributes"
                ],
                "summary": "Get an attribute",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Attribute ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_AttributeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_AttributeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_AttributeResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an attribute",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attributes"
                ],
                "summary": "Update an attribute",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Attribute ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Attribute name",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateAttributeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_AttributeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_AttributeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-array_api_AttributeResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an attribute",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attributes"
                ],
                "summary": "Delete an attribute",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Attribute ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    }
                }
            }
        },
        "/brands": {
            "get": {
                "description": "Get a list of brands",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get a list of brands",
                "operationId": "get-brands",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_CategoryResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new Brand",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Create a new Brand",
                "operationId": "create-Brand",
                "parameters": [
                    {
                        "description": "Brand request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    }
                }
            }
        },
        "/brands/{id}": {
            "put": {
                "description": "Update a Brand",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update a Brand",
                "operationId": "update-Brand",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Brand ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Brand request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_CategoryResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_CategoryResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a Brand",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Delete a Brand",
                "operationId": "delete-Brand",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Brand ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    }
                }
            }
        },
        "/cart": {
            "get": {
                "description": "get cart details by user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cart"
                ],
                "summary": "Get cart details by user ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_CartDetailResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "create a new cart for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carts"
                ],
                "summary": "Create a new cart",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_CartDetailResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/cart/checkoutHandler": {
            "post": {
                "description": "update product items in the cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carts"
                ],
                "summary": "Update product items in the cart",
                "parameters": [
                    {
                        "description": "Checkout input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CheckoutRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/cart/clear": {
            "put": {
                "description": "clear the cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carts"
                ],
                "summary": "Clear the cart",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/cart/item/{id}": {
            "delete": {
                "description": "remove a product from the cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carts"
                ],
                "summary": "Remove a product from the cart",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/cart/item/{variant_id}": {
            "post": {
                "description": "add a product to the cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carts"
                ],
                "summary": "Add a product to the cart",
                "parameters": [
                    {
                        "description": "Add product to cart input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateCartItemQtyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-uuid_UUID"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "description": "Get a list of Categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get a list of Categories",
                "operationId": "get-Categories",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/categories/slug/{slug}": {
            "get": {
                "description": "Get a list of Products by Category Slug",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get a list of Products by Category Slug",
                "operationId": "get-Products-by-Category-Slug",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category Slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/collections/{slug}": {
            "get": {
                "description": "Get a list of Collections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collections"
                ],
                "summary": "Get a list of Collections",
                "operationId": "get-Shop-Collection-by-slug",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/discounts": {
            "get": {
                "description": "Get all discounts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "discounts"
                ],
                "summary": "Get all discounts",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Page size",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by code",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "percentage",
                        "description": "Discount type",
                        "name": "discountType",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": true,
                        "description": "Is active",
                        "name": "isActive",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_DiscountListItemResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new discount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "discounts"
                ],
                "summary": "Create a new discount",
                "parameters": [
                    {
                        "description": "Discount info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateDiscountRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_DiscountDetailResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    }
                }
            }
        },
        "/discounts/{id}": {
            "get": {
                "description": "Get discount by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "discounts"
                ],
                "summary": "Get discount by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Discount ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_DiscountDetailResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    }
                }
            }
        },
        "/images/product/{product_id}": {
            "get": {
                "description": "get list of product image by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "images"
                ],
                "summary": "Get list of product image by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-array_api_ImageResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "upload product images by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "images"
                ],
                "summary": "Upload product images",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Image file",
                        "name": "files",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-array_api_ImageResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "remove a product image by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "images"
                ],
                "summary": "Remove a product image by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/images/{publicID}": {
            "delete": {
                "description": "remove a product by external ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "images"
                ],
                "summary": "Remove a product by external ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "publicID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/order/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List orders of the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "List orders",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by payment status",
                        "name": "payment_status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-array_api_OrderListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-array_api_OrderListResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-array_api_OrderListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-array_api_OrderListResponse"
                        }
                    }
                }
            }
        },
        "/order/{order_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get order detail by order ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Get order detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.OrderDetailResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.OrderDetailResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.OrderDetailResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.OrderDetailResponse"
                        }
                    }
                }
            }
        },
        "/order/{order_id}/cancel": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Cancel order by order ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Cancel order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_OrderListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_OrderListResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_OrderListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_OrderListResponse"
                        }
                    }
                }
            }
        },
        "/order/{order_id}/confirm-received": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "confirm received order payment info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "confirm received order payment info",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    }
                }
            }
        },
        "/order/{order_id}/refund": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Refund order by order ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Refund order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_OrderListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_OrderListResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_OrderListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_OrderListResponse"
                        }
                    }
                }
            }
        },
        "/order/{order_id}/status": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Change order status by order ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Change order status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Status",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_OrderListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_OrderListResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_OrderListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_OrderListResponse"
                        }
                    }
                }
            }
        },
        "/payment": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Initiate payment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment"
                ],
                "summary": "Initiate payment",
                "parameters": [
                    {
                        "description": "Payment request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PaymentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_PaymentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    }
                }
            }
        },
        "/payment/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get payment  by order ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment"
                ],
                "summary": "Get payment  by order ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_PaymentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    }
                }
            }
        },
        "/payment/{payment_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Change payment status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment"
                ],
                "summary": "Change payment status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment ID",
                        "name": "payment_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_PaymentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "description": "get list of products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Get list of products",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ApiResponse-api_ProductListModel"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_ProductListModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_ProductListModel"
                        }
                    }
                }
            },
            "post": {
                "description": "create a new product with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Create a new product",
                "parameters": [
                    {
                        "description": "Product input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/repository.CreateProductTxArgs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_ProductListModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    }
                }
            }
        },
        "/products/{product_id}": {
            "get": {
                "description": "get a product detail by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Get a product detail by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_ProductListModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_ProductListModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_ProductListModel"
                        }
                    }
                }
            },
            "put": {
                "description": "update a product by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Update a product by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/repository.UpdateProductTxParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_ProductListModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_ProductListModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_ProductListModel"
                        }
                    }
                }
            },
            "delete": {
                "description": "remove a product by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Remove a product by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    }
                }
            }
        },
        "/ratings": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Post a product rating",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ratings"
                ],
                "summary": "Post a rating",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order Item ID",
                        "name": "order_item_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Rating (1-5)",
                        "name": "rating",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Review Title",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Review Content",
                        "name": "content",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Images",
                        "name": "files",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_ProductRatingModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    }
                }
            }
        },
        "/ratings/orders/{order_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get ratings for a specific order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ratings"
                ],
                "summary": "Get order ratings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-array_api_ProductRatingModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    }
                }
            }
        },
        "/ratings/products/{product_id}": {
            "get": {
                "description": "Get ratings for a specific product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ratings"
                ],
                "summary": "Get product ratings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Page size",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-array_api_ProductRatingModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    }
                }
            }
        },
        "/ratings/{rating_id}/helpful": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Post a helpful rating",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ratings"
                ],
                "summary": "Post a helpful rating",
                "parameters": [
                    {
                        "description": "Rating ID",
                        "name": "rating_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Helpful",
                        "name": "helpful",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    }
                }
            }
        },
        "/ratings/{rating_id}/reply": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Post a reply to a product rating",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ratings"
                ],
                "summary": "Post a reply to a rating",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Rating ID",
                        "name": "rating_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Reply Content",
                        "name": "content",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    }
                }
            }
        },
        "/shop/brands": {
            "get": {
                "description": "Get a list of brands for the shop",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Brands"
                ],
                "summary": "Get a list of brands for the shop",
                "operationId": "get-shop-brands",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    }
                }
            }
        },
        "/shop/brands/{slug}": {
            "get": {
                "description": "Get a list of brands for the shop",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Brands"
                ],
                "summary": "Get a list of brands for the shop",
                "operationId": "get-shop-brand-by-slug",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Brand slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Get user info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_UserResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.RegisterRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_UserResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_UserResponse"
                        }
                    }
                }
            }
        },
        "/users/list": {
            "get": {
                "description": "List users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "List users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-array_api_UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    }
                }
            }
        },
        "/users/loginHandler": {
            "post": {
                "description": "Login to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Login to the system",
                "parameters": [
                    {
                        "description": "User info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_LoginResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_LoginResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_LoginResponse"
                        }
                    }
                }
            }
        },
        "/users/refresh-token": {
            "post": {
                "description": "Refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Refresh token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_RefreshTokenResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_RefreshTokenResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-api_RefreshTokenResponse"
                        }
                    }
                }
            }
        },
        "/users/verify-email": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Verify email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Verify email",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Verify code",
                        "name": "verify_code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Send verify email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Send verify email",
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "patch": {
                "description": "Update user info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user info",
                "parameters": [
                    {
                        "description": "User info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-repository_UpdateUserRow"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-gin_H"
                        }
                    }
                }
            }
        },
        "/webhook/stripe": {
            "post": {
                "description": "Stripe webhook",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "webhook"
                ],
                "summary": "Stripe webhook",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse-bool"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.Address": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "ward": {
                    "type": "string"
                }
            }
        },
        "api.AddressResponse": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "default": {
                    "type": "boolean"
                },
                "district": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "ward": {
                    "type": "string"
                }
            }
        },
        "api.ApiError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "details": {
                    "type": "string"
                },
                "stack": {
                    "description": "Hide in production",
                    "type": "string"
                }
            }
        },
        "api.ApiResponse-api_AddressResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.AddressResponse"
                },
                "error": {
                    "$ref": "#/definitions/api.ApiError"
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/api.MetaInfo"
                },
                "pagination": {
                    "$ref": "#/definitions/api.Pagination"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.ApiResponse-api_AttributeResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.AttributeResponse"
                },
                "error": {
                    "$ref": "#/definitions/api.ApiError"
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/api.MetaInfo"
                },
                "pagination": {
                    "$ref": "#/definitions/api.Pagination"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.ApiResponse-api_CartDetailResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.CartDetailResponse"
                },
                "error": {
                    "$ref": "#/definitions/api.ApiError"
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/api.MetaInfo"
                },
                "pagination": {
                    "$ref": "#/definitions/api.Pagination"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.ApiResponse-api_CategoryResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.CategoryResponse"
                },
                "error": {
                    "$ref": "#/definitions/api.ApiError"
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/api.MetaInfo"
                },
                "pagination": {
                    "$ref": "#/definitions/api.Pagination"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.ApiResponse-api_DiscountDetailResponseModel": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.DiscountDetailResponseModel"
                },
                "error": {
                    "$ref": "#/definitions/api.ApiError"
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/api.MetaInfo"
                },
                "pagination": {
                    "$ref": "#/definitions/api.Pagination"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.ApiResponse-api_DiscountListItemResponseModel": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.DiscountListItemResponseModel"
                },
                "error": {
                    "$ref": "#/definitions/api.ApiError"
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/api.MetaInfo"
                },
                "pagination": {
                    "$ref": "#/definitions/api.Pagination"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.ApiResponse-api_LoginResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.LoginResponse"
                },
                "error": {
                    "$ref": "#/definitions/api.ApiError"
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/api.MetaInfo"
                },
                "pagination": {
                    "$ref": "#/definitions/api.Pagination"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.ApiResponse-api_OrderDetailResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.OrderDetailResponse"
                },
                "error": {
                    "$ref": "#/definitions/api.ApiError"
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/api.MetaInfo"
                },
                "pagination": {
                    "$ref": "#/definitions/api.Pagination"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.ApiResponse-api_OrderListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.OrderListResponse"
                },
                "error": {
                    "$ref": "#/definitions/api.ApiError"
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/api.MetaInfo"
                },
                "pagination": {
                    "$ref": "#/definitions/api.Pagination"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.ApiResponse-api_PaymentResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.PaymentResponse"
                },
                "error": {
                    "$ref": "#/definitions/api.ApiError"
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/api.MetaInfo"
                },
                "pagination": {
                    "$ref": "#/definitions/api.Pagination"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.ApiResponse-api_ProductListModel": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.ProductListModel"
                },
                "error": {
                    "$ref": "#/definitions/api.ApiError"
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/api.MetaInfo"
                },
                "pagination": {
                    "$ref": "#/definitions/api.Pagination"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.ApiResponse-api_ProductRatingModel": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.ProductRatingModel"
                },
                "error": {
                    "$ref": "#/definitions/api.ApiError"
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/api.MetaInfo"
                },
                "pagination": {
                    "$ref": "#/definitions/api.Pagination"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.ApiResponse-api_RefreshTokenResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.RefreshTokenResponse"
                },
                "error": {
                    "$ref": "#/definitions/api.ApiError"
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/api.MetaInfo"
                },
                "pagination": {
                    "$ref": "#/definitions/api.Pagination"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.ApiResponse-api_UserResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.UserResponse"
                },
                "error": {
                    "$ref": "#/definitions/api.ApiError"
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/api.MetaInfo"
                },
                "pagination": {
                    "$ref": "#/definitions/api.Pagination"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.ApiResponse-array_api_AddressResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.AddressResponse"
                    }
                },
                "error": {
                    "$ref": "#/definitions/api.ApiError"
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/api.MetaInfo"
                },
                "pagination": {
                    "$ref": "#/definitions/api.Pagination"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.ApiResponse-array_api_AttributeResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.AttributeResponse"
                    }
                },
                "error": {
                    "$ref": "#/definitions/api.ApiError"
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/api.MetaInfo"
                },
                "pagination": {
                    "$ref": "#/definitions/api.Pagination"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.ApiResponse-array_api_ImageResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ImageResponse"
                    }
                },
                "error": {
                    "$ref": "#/definitions/api.ApiError"
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/api.MetaInfo"
                },
                "pagination": {
                    "$ref": "#/definitions/api.Pagination"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.ApiResponse-array_api_OrderListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.OrderListResponse"
                    }
                },
                "error": {
                    "$ref": "#/definitions/api.ApiError"
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/api.MetaInfo"
                },
                "pagination": {
                    "$ref": "#/definitions/api.Pagination"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.ApiResponse-array_api_ProductRatingModel": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ProductRatingModel"
                    }
                },
                "error": {
                    "$ref": "#/definitions/api.ApiError"
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/api.MetaInfo"
                },
                "pagination": {
                    "$ref": "#/definitions/api.Pagination"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.ApiResponse-array_api_UserResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.UserResponse"
                    }
                },
                "error": {
                    "$ref": "#/definitions/api.ApiError"
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/api.MetaInfo"
                },
                "pagination": {
                    "$ref": "#/definitions/api.Pagination"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.ApiResponse-bool": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "boolean"
                },
                "error": {
                    "$ref": "#/definitions/api.ApiError"
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/api.MetaInfo"
                },
                "pagination": {
                    "$ref": "#/definitions/api.Pagination"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.ApiResponse-gin_H": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/gin.H"
                },
                "error": {
                    "$ref": "#/definitions/api.ApiError"
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/api.MetaInfo"
                },
                "pagination": {
                    "$ref": "#/definitions/api.Pagination"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.ApiResponse-repository_UpdateUserRow": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/repository.UpdateUserRow"
                },
                "error": {
                    "$ref": "#/definitions/api.ApiError"
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/api.MetaInfo"
                },
                "pagination": {
                    "$ref": "#/definitions/api.Pagination"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.ApiResponse-string": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "error": {
                    "$ref": "#/definitions/api.ApiError"
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/api.MetaInfo"
                },
                "pagination": {
                    "$ref": "#/definitions/api.Pagination"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.ApiResponse-uuid_UUID": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "error": {
                    "$ref": "#/definitions/api.ApiError"
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/api.MetaInfo"
                },
                "pagination": {
                    "$ref": "#/definitions/api.Pagination"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.AttributeResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.AttributeValue"
                    }
                }
            }
        },
        "api.AttributeValue": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "displayOrder": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.AttributeValueRequest": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "displayOrder": {
                    "type": "integer",
                    "minimum": 0
                },
                "isActive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.CartDetailResponse": {
            "type": "object",
            "properties": {
                "cartItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.CartItemResponse"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "totalPrice": {
                    "type": "number"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "api.CartItemResponse": {
            "type": "object",
            "required": [
                "id",
                "productId",
                "variantId"
            ],
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/repository.AttributeDataSnapshot"
                    }
                },
                "discount": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "productId": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "sku": {
                    "type": "string"
                },
                "stock": {
                    "type": "integer"
                },
                "variantId": {
                    "type": "string"
                }
            }
        },
        "api.CategoryLinkedProduct": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "variantCount": {
                    "type": "integer"
                }
            }
        },
        "api.CategoryResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.CategoryLinkedProduct"
                    }
                },
                "published": {
                    "type": "boolean"
                },
                "remarkable": {
                    "type": "boolean"
                },
                "slug": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "api.CheckoutRequest": {
            "type": "object",
            "required": [
                "paymentMethod"
            ],
            "properties": {
                "address": {
                    "$ref": "#/definitions/api.Address"
                },
                "addressId": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "paymentGateway": {
                    "type": "string",
                    "enum": [
                        "stripe"
                    ]
                },
                "paymentMethod": {
                    "type": "string",
                    "enum": [
                        "code",
                        "stripe"
                    ]
                },
                "paymentReceiptEmail": {
                    "type": "string"
                }
            }
        },
        "api.CreateAddressRequest": {
            "type": "object",
            "required": [
                "city",
                "district",
                "phone",
                "street"
            ],
            "properties": {
                "city": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "isDefault": {
                    "type": "boolean"
                },
                "phone": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 10
                },
                "street": {
                    "type": "string"
                },
                "ward": {
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "api.CreateAttributeRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.AttributeValueRequest"
                    }
                }
            }
        },
        "api.CreateCategoryRequest": {
            "type": "object",
            "required": [
                "name",
                "slug"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 1000
                },
                "displayOrder": {
                    "type": "integer"
                },
                "image": {
                    "$ref": "#/definitions/multipart.FileHeader"
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                },
                "remarkable": {
                    "type": "boolean"
                },
                "slug": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                }
            }
        },
        "api.CreateDiscountRequest": {
            "type": "object",
            "required": [
                "code",
                "discountType",
                "discountValue",
                "isActive",
                "startsAt"
            ],
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "code": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 5
                },
                "description": {
                    "type": "string",
                    "maxLength": 1000
                },
                "discountType": {
                    "type": "string",
                    "enum": [
                        "percentage",
                        "fixed_amount"
                    ]
                },
                "discountValue": {
                    "type": "number"
                },
                "expiresAt": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "maxDiscountAmount": {
                    "type": "number"
                },
                "minPurchaseAmount": {
                    "type": "number"
                },
                "products": {
                    "description": "Related entities",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "startsAt": {
                    "type": "string"
                },
                "usageLimit": {
                    "type": "integer",
                    "minimum": 0
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.DiscountDetailResponseModel": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "discountType": {
                    "type": "string"
                },
                "discountValue": {
                    "type": "number"
                },
                "expiresAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "maxDiscount": {
                    "type": "number"
                },
                "minPurchase": {
                    "type": "number"
                },
                "startsAt": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "usageHistory": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.DiscountUsageHistory"
                    }
                },
                "usageLimit": {
                    "type": "integer"
                },
                "usedCount": {
                    "type": "integer"
                }
            }
        },
        "api.DiscountListItemResponseModel": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "discountType": {
                    "type": "string"
                },
                "discountValue": {
                    "type": "number"
                },
                "expiresAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "maxDiscount": {
                    "type": "number"
                },
                "minPurchase": {
                    "type": "number"
                },
                "startsAt": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "usageLimit": {
                    "type": "integer"
                },
                "usedCount": {
                    "type": "integer"
                }
            }
        },
        "api.DiscountUsageHistory": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "customerName": {
                    "type": "string"
                },
                "date": {
                    "type": "string",
                    "format": "2006-01-02"
                },
                "discountAmount": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "orderId": {
                    "type": "string"
                }
            }
        },
        "api.ImageResponse": {
            "type": "object",
            "properties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "externalId": {
                    "type": "string"
                },
                "fileSize": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "mimeType": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "api.LoginRequest": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 6
                },
                "password": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 6
                },
                "username": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 3
                }
            }
        },
        "api.LoginResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "accessTokenExpiresIn": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "refreshTokenExpiresAt": {
                    "type": "string"
                },
                "sessionId": {
                    "type": "string"
                }
            }
        },
        "api.MetaInfo": {
            "type": "object",
            "properties": {
                "method": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "requestId": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "api.OrderDetailResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "customerEmail": {
                    "type": "string"
                },
                "customerName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "paymentInfo": {
                    "$ref": "#/definitions/api.PaymentInfoModel"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.OrderItemResponse"
                    }
                },
                "shippingInfo": {
                    "$ref": "#/definitions/repository.ShippingAddressSnapshot"
                },
                "status": {
                    "$ref": "#/definitions/repository.OrderStatus"
                },
                "total": {
                    "type": "number"
                }
            }
        },
        "api.OrderItemResponse": {
            "type": "object",
            "properties": {
                "attributesSnapshot": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/repository.AttributeDataSnapshot"
                    }
                },
                "id": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "lineTotal": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "rating": {
                    "$ref": "#/definitions/api.RatingModel"
                },
                "variantId": {
                    "type": "string"
                }
            }
        },
        "api.OrderListResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "customerEmail": {
                    "type": "string"
                },
                "customerName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "paymentStatus": {
                    "$ref": "#/definitions/repository.PaymentStatus"
                },
                "status": {
                    "$ref": "#/definitions/repository.OrderStatus"
                },
                "total": {
                    "type": "number"
                },
                "totalItems": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "api.Pagination": {
            "type": "object",
            "properties": {
                "hasNextPage": {
                    "type": "boolean"
                },
                "hasPreviousPage": {
                    "type": "boolean"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "totalPages": {
                    "type": "integer"
                }
            }
        },
        "api.PaymentInfoModel": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "clientSecret": {
                    "type": "string"
                },
                "gateway": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "intentId": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "refundId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.PaymentRequest": {
            "type": "object",
            "required": [
                "orderId",
                "paymentMethod"
            ],
            "properties": {
                "orderId": {
                    "type": "string"
                },
                "paymentMethod": {
                    "type": "string",
                    "enum": [
                        "cod",
                        "stripe"
                    ]
                }
            }
        },
        "api.PaymentResponse": {
            "type": "object",
            "properties": {
                "details": {},
                "gateway": {
                    "$ref": "#/definitions/repository.PaymentGateway"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/repository.PaymentStatus"
                }
            }
        },
        "api.ProductListModel": {
            "type": "object",
            "properties": {
                "avgRating": {
                    "type": "number"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "imageId": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "maxPrice": {
                    "type": "number"
                },
                "minPrice": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "reviewCount": {
                    "type": "integer"
                },
                "sku": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "variantCount": {
                    "type": "integer"
                }
            }
        },
        "api.ProductRatingModel": {
            "type": "object",
            "properties": {
                "helpfulVotes": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.RatingImageModel"
                    }
                },
                "isApproved": {
                    "type": "boolean"
                },
                "isVisible": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "productName": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                },
                "reviewContent": {
                    "type": "string"
                },
                "reviewTitle": {
                    "type": "string"
                },
                "unhelpfulVotes": {
                    "type": "integer"
                },
                "userId": {
                    "type": "string"
                },
                "verifiedPurchase": {
                    "type": "boolean"
                }
            }
        },
        "api.RatingImageModel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "api.RatingModel": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.RefreshTokenResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "accessTokenExpiresAt": {
                    "type": "string"
                }
            }
        },
        "api.RegisterRequestBody": {
            "type": "object",
            "required": [
                "address",
                "email",
                "fullname",
                "password",
                "phone",
                "username"
            ],
            "properties": {
                "address": {
                    "$ref": "#/definitions/api.CreateAddressRequest"
                },
                "email": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 6
                },
                "fullname": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 3
                },
                "password": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 6
                },
                "phone": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 10
                },
                "username": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 3
                }
            }
        },
        "api.UpdateAddressRequest": {
            "type": "object",
            "properties": {
                "address1": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "isDefault": {
                    "type": "boolean"
                },
                "phone": {
                    "type": "string"
                },
                "ward": {
                    "type": "string"
                }
            }
        },
        "api.UpdateAttributeRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.UpdateAttributeValueRequest"
                    }
                }
            }
        },
        "api.UpdateAttributeValueRequest": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "displayOrder": {
                    "type": "integer",
                    "minimum": 0
                },
                "id": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.UpdateCartItemQtyRequest": {
            "type": "object",
            "required": [
                "quantity"
            ],
            "properties": {
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "api.UpdateCategoryRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 1000
                },
                "displayOrder": {
                    "type": "integer"
                },
                "image": {
                    "$ref": "#/definitions/multipart.FileHeader"
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                },
                "published": {
                    "type": "boolean"
                },
                "remarkable": {
                    "type": "boolean"
                },
                "slug": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                }
            }
        },
        "api.UpdateUserRequest": {
            "type": "object",
            "required": [
                "userId"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 6
                },
                "fullname": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 3
                },
                "phone": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 8
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "api.UserResponse": {
            "type": "object",
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.AddressResponse"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "passwordChangedAt": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/repository.UserRole"
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "verifiedEmail": {
                    "type": "boolean"
                },
                "verifiedPhone": {
                    "type": "boolean"
                }
            }
        },
        "gin.H": {
            "type": "object",
            "additionalProperties": {}
        },
        "multipart.FileHeader": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "header": {
                    "$ref": "#/definitions/textproto.MIMEHeader"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "repository.AttributeDataSnapshot": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "repository.CreateProductTxArgs": {
            "type": "object",
            "required": [
                "name",
                "price",
                "sku"
            ],
            "properties": {
                "attributes": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    }
                },
                "brand_id": {
                    "type": "string"
                },
                "category_id": {
                    "type": "string"
                },
                "collection_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "maxLength": 5000,
                    "minLength": 6
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                },
                "price": {
                    "type": "number"
                },
                "short_description": {
                    "type": "string",
                    "maxLength": 2000
                },
                "sku": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "variants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/repository.CreateProductVariantTxParams"
                    }
                }
            }
        },
        "repository.CreateProductVariantTxParams": {
            "type": "object",
            "required": [
                "price",
                "stock_qty"
            ],
            "properties": {
                "attributes": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/repository.ProductAttributesTxParam"
                    }
                },
                "is_active": {
                    "type": "boolean"
                },
                "price": {
                    "type": "number"
                },
                "stock_qty": {
                    "type": "integer",
                    "minimum": 0
                },
                "weight": {
                    "type": "number",
                    "minimum": 0
                }
            }
        },
        "repository.OrderStatus": {
            "type": "string",
            "enum": [
                "pending",
                "confirmed",
                "delivering",
                "delivered",
                "cancelled",
                "refunded",
                "completed"
            ],
            "x-enum-varnames": [
                "OrderStatusPending",
                "OrderStatusConfirmed",
                "OrderStatusDelivering",
                "OrderStatusDelivered",
                "OrderStatusCancelled",
                "OrderStatusRefunded",
                "OrderStatusCompleted"
            ]
        },
        "repository.PaymentGateway": {
            "type": "string",
            "enum": [
                "stripe",
                "paypal",
                "visa",
                "mastercard",
                "apple_pay",
                "postpaid",
                "momo",
                "zalo_pay",
                "vn_pay"
            ],
            "x-enum-varnames": [
                "PaymentGatewayStripe",
                "PaymentGatewayPaypal",
                "PaymentGatewayVisa",
                "PaymentGatewayMastercard",
                "PaymentGatewayApplePay",
                "PaymentGatewayPostpaid",
                "PaymentGatewayMomo",
                "PaymentGatewayZaloPay",
                "PaymentGatewayVnPay"
            ]
        },
        "repository.PaymentStatus": {
            "type": "string",
            "enum": [
                "pending",
                "success",
                "failed",
                "cancelled",
                "refunded",
                "processing"
            ],
            "x-enum-varnames": [
                "PaymentStatusPending",
                "PaymentStatusSuccess",
                "PaymentStatusFailed",
                "PaymentStatusCancelled",
                "PaymentStatusRefunded",
                "PaymentStatusProcessing"
            ]
        },
        "repository.ProductAttributesTxParam": {
            "type": "object",
            "required": [
                "id",
                "value_id"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "value_id": {
                    "type": "string"
                }
            }
        },
        "repository.ShippingAddressSnapshot": {
            "type": "object",
            "required": [
                "city",
                "district",
                "phone",
                "street",
                "ward"
            ],
            "properties": {
                "city": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "ward": {
                    "type": "string"
                }
            }
        },
        "repository.UpdateProductImages": {
            "type": "object",
            "properties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "omitempty": {
                    "type": "boolean"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "repository.UpdateProductTxParams": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "brand_id": {
                    "type": "string"
                },
                "category_id": {
                    "type": "string"
                },
                "collection_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "maxLength": 5000,
                    "minLength": 6
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/repository.UpdateProductImages"
                    }
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                },
                "price": {
                    "type": "number"
                },
                "short_description": {
                    "type": "string",
                    "maxLength": 2000
                },
                "sku": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "stock": {
                    "type": "integer"
                },
                "variants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/repository.UpdateProductVariantTxParams"
                    }
                }
            }
        },
        "repository.UpdateProductVariantTxParams": {
            "type": "object",
            "required": [
                "price",
                "stock_qty"
            ],
            "properties": {
                "attributes": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/repository.ProductAttributesTxParam"
                    }
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "price": {
                    "type": "number"
                },
                "stock_qty": {
                    "type": "integer",
                    "minimum": 0
                },
                "weight": {
                    "type": "number",
                    "minimum": 0
                }
            }
        },
        "repository.UpdateUserRow": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/repository.UserRole"
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "verifiedEmail": {
                    "type": "boolean"
                },
                "verifiedPhone": {
                    "type": "boolean"
                }
            }
        },
        "repository.UserRole": {
            "type": "string",
            "enum": [
                "admin",
                "user",
                "moderator"
            ],
            "x-enum-varnames": [
                "UserRoleAdmin",
                "UserRoleUser",
                "UserRoleModerator"
            ]
        },
        "textproto.MIMEHeader": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        }
    }
}